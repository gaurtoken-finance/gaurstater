{"version":3,"sources":["views/Profile/components/EditProfileModal/reducer.ts","views/Profile/components/ClaimGiftModal.tsx","hooks/useGetProfileCosts.ts","hooks/useHasCakeBalance.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","hooks/useApproveConfirmTransaction.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","hooks/useFarmsWithBalance.ts","views/Profile/components/KycCard.tsx","views/Profile/components/StakeCard.tsx","views/Profile/index.tsx","hooks/useTokenBalance.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx"],"names":["Views","useCanClaim","useState","canClaim","setCanClaim","refresh","setRefresh","account","useWeb3React","checkClaimStatus","useCallback","prevRefresh","useEffect","a","claimRefundContract","getClaimRefundContract","methods","call","walletCanClaim","fetchClaimStatus","ClaimGift","onSuccess","onDismiss","isConfirming","setIsConfirming","t","useTranslation","useClaimRefundContract","useToast","toastSuccess","toastError","title","style","maxWidth","as","mb","endIcon","spin","color","isLoading","onClick","getCakeBack","send","from","on","error","message","disabled","reducer","state","action","type","currentView","view","previousView","useEditProfile","useReducer","START","dispatch","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","profileContract","getProfileContract","makeBatchRequest","BigNumber","fetchCosts","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","gte","DangerOutline","styled","Button","attrs","variant","theme","colors","failure","AvatarWrapper","div","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","useProfile","minimumCakeRequired","isActive","hasMinimumCakeRequired","cakeContract","useCake","cost","allowance","getPancakeProfileAddress","response","currentAllowance","lt","checkApprovalStatus","alignItems","justifyContent","flexDirection","ProfileAvatar","height","minimum","getFullDisplayBalance","width","PauseProfilePage","isAcknowledged","setIsAcknowledged","pancakeProfileContract","useProfileContract","useAppDispatch","getBalanceNumber","htmlFor","cursor","display","marginBottom","id","checked","onChange","scale","ml","pauseProfile","fetchProfile","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","actions","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","noop","handlePreApprove","useRef","current","then","result","isApproving","isApproved","isConfirmed","handleApprove","console","handleConfirm","StyledCard","Card","isSuccess","Label","label","isDisabled","Body","tertiary","Children","StyledBackgroundImage","src","SelectionCard","name","value","isChecked","image","children","props","e","target","flex","StyledApproveConfirmButtons","md","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","undefined","ChangeProfilePicPage","tokenId","nftAddress","selectedNft","setSelectedNft","useGetCollectibles","tokenIds","nftsInWallet","contract","useERC721","approve","updateProfile","reactivateProfile","map","walletNft","firstTokenId","identifier","images","Number","getAddressByType","bold","length","ApproveCakePage","setIsApproving","times","toJSON","viewTitle","EditProfileModal","translationKey","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","useModal","hasProfile","HeaderWrapper","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","fastRefresh","useRefresh","calls","farmsConfig","farm","address","getMasterChefAddress","params","pid","multicall","masterChefABI","rawResults","results","index","balance","fetchBalances","StyledKycStakingCard","Block","img","textSubtle","Actions","KycCard","setPendingTx","farmsWithBalance","masterChefContract","useMasterchef","balancesWithValue","filter","balanceType","toNumber","farmWithBalance","harvest","external","href","UnlockButton","Cards","BaseLayout","lg","Profile","isInitialized","PageLoader","Page","Header","StakeCard","useGetBnbBalance","setBalance","useLastUpdated","lastUpdated","setLastUpdated","web3","useWeb3","eth","getBalance","walletBalance","fetchBalance","tokenAddress","getBep20Contract","balanceOf","res","TeamAvatar","card","background","bg","AvatarInactive","NoProfileAvatarIcon","nft","team","alt"],"mappings":"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","file":"static/js/7.c0800ce4.chunk.js","sourcesContent":["import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Success!'))\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError(t('Error'), error?.message)\n      })\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useToast from './useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: BIG_ZERO,\n    numberCakeToRegister: BIG_ZERO,\n    numberCakeToUpdate: BIG_ZERO,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Paused!'))\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError(t('An error occurred approving transaction'))\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError(t('An error occurred confirming transaction'))\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? t('Approving') : t('Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles, useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC721, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const contract = useERC721(selectedNft.nftAddress)\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        return contract.methods.approve(getPancakeProfileAddress(), selectedNft.tokenId).send({ from: account })\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return profileContract.methods\n            .reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n            .send({ from: account })\n        }\n\n        return profileContract.methods\n          .updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n          .send({ from: account })\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError(t('Error'), error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Approve CAKE',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n            {t('Check your stats and staking')}\n          </Heading>\n        </div>\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, Link as UiKitLink } from '@pancakeswap/uikit'\nimport { harvest } from 'utils/callHelpers'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledKycStakingCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 200px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst KycCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const farmsWithBalance = useFarmsWithBalance()\n  const masterChefContract = useMasterchef()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of balancesWithValue) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvest(masterChefContract, farmWithBalance.pid, account)\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n    setPendingTx(false)\n  }, [account, balancesWithValue, masterChefContract])\n\n  return (\n    <StyledKycStakingCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Verification & KYC')}\n        </Heading>\n        <Block>\n          <Label>{t('Please note, according to some projects requirements, our member would need to be verified by KYC in order to participate in specific pools')}</Label>\n        </Block>\n        <Actions>\n          {account ? (\n            <UiKitLink external href=\"https://verify-with.blockpass.org/?clientId=gaurtokenfinance&serviceName=GaurTokenFinance&env=prod\">\n              <Button\n                id=\"harvest-all\"\n                width=\"100%\"\n              >\n                Click for KYC\n            </Button>\n            </UiKitLink>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledKycStakingCard>\n  )\n}\n\nexport default KycCard\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, Link as UiKitLink } from '@pancakeswap/uikit'\nimport { harvest } from 'utils/callHelpers'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledKycStakingCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 200px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst KycCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const farmsWithBalance = useFarmsWithBalance()\n  const masterChefContract = useMasterchef()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of balancesWithValue) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvest(masterChefContract, farmWithBalance.pid, account)\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n    setPendingTx(false)\n  }, [account, balancesWithValue, masterChefContract])\n\n  return (\n    <StyledKycStakingCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Wallet Balance')}\n        </Heading>\n        <Block>\n          <Label>{t('Loading .... $GAUR')}</Label>\n        </Block>\n        <Actions>\n          {account ? (\n            <UiKitLink external href=\"https://verify-with.blockpass.org/?clientId=gaurtokenfinance&serviceName=GaurTokenFinance&env=prod\">\n              <Button\n                id=\"harvest-all\"\n                width=\"100%\"\n                variant=\"danger\"\n              >\n                Buy more\n            </Button>\n            </UiKitLink>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledKycStakingCard>\n  )\n}\n\nexport default KycCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap/uikit'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useProfile } from 'state/hooks'\nimport Header from './components/Header'\nimport KycCard from './components/KycCard'\nimport StakeCard from './components/StakeCard'\n\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n\n  return (\n    <Page>\n      <Header />\n      <Cards>\n        <KycCard />\n        <StakeCard />\n      </Cards>\n    </Page>\n  )\n}\n\nexport default Profile\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n"],"sourceRoot":""}